{
  "id": "schema_backward_compatibility",
  "name": "Schema Backward Compatibility",
  "version": "1.0.0",
  "description": "Ensures schema changes maintain backward compatibility with existing components",
  "category": "quality_assurance",
  "severity": "high",
  "applicability": [
    "schema_design",
    "system_evolution",
    "validation_systems"
  ],
  "validationCriteria": [
    {
      "id": "existing_components_validate",
      "description": "All existing components continue to validate successfully",
      "check": "Run force_component_validator on all existing tools, patterns, and constraints",
      "errorMessage": "Schema changes break validation of existing components"
    },
    {
      "id": "no_breaking_required_fields",
      "description": "No breaking changes to required fields in schema",
      "check": "Compare required fields between old and new schema versions",
      "errorMessage": "Required fields have been removed or modified in breaking way"
    },
    {
      "id": "graceful_new_fields",
      "description": "New optional fields are handled gracefully by existing code",
      "check": "Test existing tools with new schema containing additional optional fields",
      "errorMessage": "Existing code fails when encountering new optional fields"
    },
    {
      "id": "enum_flexibility",
      "description": "Enum restrictions are relaxed not tightened",
      "check": "Verify that enum values are expanded or made flexible, not restricted",
      "errorMessage": "Enum restrictions have been tightened, breaking existing components"
    }
  ],
  "errorHandling": {
    "onViolation": "prevent_deployment",
    "reportingLevel": "error",
    "autoFix": false
  },
  "metadata": {
    "created": "2025-07-02T17:20:00.000Z",
    "derivedFrom": "force_extended_schema_migration",
    "tags": ["schema", "compatibility", "validation", "evolution"]
  }
}
