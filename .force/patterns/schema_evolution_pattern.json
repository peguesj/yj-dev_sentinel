{
  "id": "schema_evolution_pattern",
  "name": "Schema Evolution Pattern", 
  "version": "1.0.0",
  "description": "Approach for evolving validation schemas while maintaining backward compatibility, proven with Force extended schema implementation",
  "category": "schema_management",
  "complexity": "high",
  "applicability": [
    "schema_design",
    "system_evolution", 
    "backward_compatibility",
    "validation_systems"
  ],
  "constraints": [
    "schema_backward_compatibility",
    "validation_quality_maintenance"
  ],
  "steps": [
    {
      "id": "analyze_schema_limitations",
      "type": "executable",
      "description": "Analyze current schema limitations and failure patterns",
      "action": "force_execute_tool",
      "parameters": {
        "toolId": "force_component_validator"
      }
    },
    {
      "id": "design_extended_schema",
      "type": "descriptive",
      "description": "Design extended schema with flexible validation",
      "guidance": "Replace restrictive enums with open-ended validation. Maintain required fields while allowing custom categories and strategies."
    },
    {
      "id": "implement_schema_preference",
      "type": "descriptive", 
      "description": "Implement schema preference logic for automatic selection",
      "guidance": "Prefer extended schema when available, fallback to standard schema, graceful error handling when neither exists."
    },
    {
      "id": "validate_existing_components",
      "type": "executable",
      "description": "Test extended schema with existing components",
      "action": "force_execute_tool",
      "parameters": {
        "toolId": "force_component_validator"
      }
    },
    {
      "id": "create_migration_guide",
      "type": "executable",
      "description": "Generate migration documentation and guides",
      "action": "force_execute_tool",
      "parameters": {
        "toolId": "documentation_analysis"
      }
    },
    {
      "id": "update_tool_loading",
      "type": "descriptive",
      "description": "Update tool loading logic to use new schema",
      "guidance": "Modify engine initialization to prefer extended schema. Update error handling for schema-related failures."
    }
  ],
  "expectedOutcomes": [
    "Improved tool loading success rate",
    "Backward compatibility maintained",
    "Flexible validation for new categories",
    "Clear migration path documented",
    "Reduced validation failures"
  ],
  "validationCriteria": [
    "Existing tools continue to validate successfully",
    "New tools with custom categories validate correctly", 
    "Schema preference logic works as expected",
    "Performance impact is minimal",
    "Migration documentation is comprehensive"
  ],
  "metadata": {
    "created": "2025-07-02T17:10:00.000Z",
    "derivedFrom": "force_extended_schema_implementation",
    "successMetrics": {
      "tool_loading_improvement": "22.6%",
      "validation_flexibility": "significant"
    },
    "tags": ["schema", "evolution", "validation", "compatibility", "flexibility"]
  }
}
