{
  "id": "iterative_enhancement_workflow",
  "name": "Iterative Enhancement Workflow",
  "version": "1.0.0",
  "description": "Systematic approach to enhancing existing systems with validation at each step, derived from successful Force MCP integration development",
  "category": "development_workflow",
  "complexity": "medium",
  "applicability": [
    "system_enhancement",
    "iterative_development", 
    "quality_assurance",
    "mcp_integration"
  ],
  "constraints": [
    "atomic_commit_quality",
    "schema_backward_compatibility",
    "documentation_completeness"
  ],
  "steps": [
    {
      "id": "analyze_current_state",
      "type": "executable",
      "description": "Analyze current system state and identify enhancement opportunities",
      "action": "force_execute_tool",
      "parameters": {
        "toolId": "project_structure_analysis"
      }
    },
    {
      "id": "validate_existing_components", 
      "type": "executable",
      "description": "Validate existing components to establish baseline",
      "action": "force_execute_tool",
      "parameters": {
        "toolId": "force_component_validator"
      }
    },
    {
      "id": "design_incremental_changes",
      "type": "descriptive", 
      "description": "Design incremental changes with clear scope and dependencies",
      "guidance": "Break large changes into atomic, testable increments. Define clear interfaces and validation criteria for each increment."
    },
    {
      "id": "implement_with_validation",
      "type": "descriptive",
      "description": "Implement changes with continuous validation",
      "guidance": "Run validation tools after each significant change. Use force_component_validator and force_component_fix_system regularly."
    },
    {
      "id": "test_integration_points",
      "type": "executable",
      "description": "Test integration points and system interactions", 
      "action": "force_execute_tool",
      "parameters": {
        "toolId": "force_mcp_integration"
      }
    },
    {
      "id": "generate_documentation",
      "type": "executable",
      "description": "Generate comprehensive documentation for changes",
      "action": "force_execute_tool", 
      "parameters": {
        "toolId": "documentation_analysis"
      }
    },
    {
      "id": "apply_atomic_commits",
      "type": "executable",
      "description": "Apply atomic commit workflow for clean history",
      "action": "force_apply_pattern",
      "parameters": {
        "patternId": "atomic_commit_workflow"
      }
    }
  ],
  "expectedOutcomes": [
    "Enhanced system with improved functionality",
    "Comprehensive documentation for changes", 
    "Clean git history with atomic commits",
    "Validated components meeting quality standards",
    "Reliable integration with existing systems"
  ],
  "validationCriteria": [
    "All components pass force_component_validator",
    "Documentation covers setup, configuration, and troubleshooting",
    "Git history shows atomic commits with clear messages",
    "Integration tests pass successfully",
    "No breaking changes to existing functionality"
  ],
  "metadata": {
    "created": "2025-07-02T17:00:00.000Z",
    "derivedFrom": "force_mcp_integration_development_session",
    "successMetrics": {
      "tool_loading_improvement": "22.6%",
      "validation_reliability": "significant_improvement"
    },
    "tags": ["iterative", "enhancement", "validation", "documentation", "git_workflow"]
  }
}
