{
  "id": "supabase-cli-usage-patterns",
  "type": "learning-record",
  "title": "Supabase CLI Command Format and Constraints Analysis",
  "description": "Analysis of proper Supabase CLI usage patterns learned during Phase 2 implementation",
  "key_learnings": [
    {
      "pattern": "Database Operations with --linked",
      "correct_format": "supabase db <subcommand> --linked",
      "examples": [
        "supabase db push --linked",
        "supabase db pull --linked",
        "supabase db diff --linked",
        "supabase db reset --linked"
      ],
      "constraint": "Only db subcommands support the --linked flag"
    },
    {
      "pattern": "Non-Database Operations",
      "correct_format": "supabase <command> (no --linked flag)",
      "examples": [
        "supabase functions deploy <function-name>",
        "supabase projects list",
        "supabase link --project-ref <ref>",
        "supabase login"
      ],
      "constraint": "These commands use the linked project context automatically"
    },
    {
      "pattern": "Environment Context",
      "learning": "Authentication and linking must be done in the correct project environment, not with npx",
      "correct_approach": "Use direct supabase commands in project directory after proper authentication"
    },
    {
      "pattern": "Project Configuration",
      "learning": "Project linking replaces the need for config.toml when using web Supabase (not local Docker)",
      "implementation": "Rely on 'supabase link' for project context rather than config files"
    }
  ],
  "anti_patterns": [
    "Using --linked with non-db commands",
    "Using npx for authentication in project context",
    "Creating config.toml for linked web projects",
    "Running supabase status when not using local Docker"
  ],
  "discovery_context": "Phase 2 core features implementation - setting up proper Supabase CLI workflow",
  "created_at": "2025-06-24T16:50:00Z",
  "session_id": "phase-2-core-features-implementation",
  "force_pattern": "technical-learning-consolidation"
}
