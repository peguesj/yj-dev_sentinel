{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://dev-sentinel.pegues.io/schemas/force-schema.json",
  "title": "Force Agentic Development Assistant System Schema",
  "description": "Master schema for Force system components including tools, patterns, constraints, learning, and governance",
  "version": "1.0.0",

  "definitions": {
    "ExecutionContext": {
      "type": "object",
      "properties": {
        "projectPhase": {
          "type": "string",
          "enum": [
            "initialization",
            "development",
            "testing",
            "deployment",
            "maintenance"
          ]
        },
        "complexityLevel": {
          "type": "string",
          "enum": ["low", "medium", "high", "enterprise"]
        },
        "environment": {
          "type": "string",
          "enum": ["development", "staging", "production"]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "required": ["projectPhase", "complexityLevel"]
    },

    "ValidationRule": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["regex", "schema", "function", "command"]
        },
        "rule": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "severity": {
          "type": "string",
          "enum": ["error", "warning", "info"]
        }
      },
      "required": ["type", "rule", "severity"]
    },

    "PerformanceMetrics": {
      "type": "object",
      "properties": {
        "executionTimeMs": {
          "type": "number",
          "minimum": 0
        },
        "memoryUsageMB": {
          "type": "number",
          "minimum": 0
        },
        "successRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "errorCount": {
          "type": "integer",
          "minimum": 0
        },
        "lastExecuted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },

    "Tool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 10
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "category": {
          "type": "string",
          "enum": [
            "git",
            "documentation",
            "code-quality",
            "testing",
            "deployment",
            "analysis"
          ]
        },
        "parameters": {
          "type": "object",
          "properties": {
            "schema": {
              "$ref": "http://json-schema.org/draft-07/schema#"
            },
            "required": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["schema"]
        },
        "execution": {
          "type": "object",
          "properties": {
            "command": {
              "type": "string"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "default": 300
            },
            "retryCount": {
              "type": "integer",
              "minimum": 0,
              "maximum": 5,
              "default": 0
            },
            "errorHandling": {
              "type": "string",
              "enum": ["fail", "warn", "ignore", "fallback"]
            },
            "fallbackTool": {
              "type": "string"
            }
          },
          "required": ["command"]
        },
        "validation": {
          "type": "object",
          "properties": {
            "preConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationRule"
              }
            },
            "postConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationRule"
              }
            }
          }
        },
        "metadata": {
          "type": "object",
          "properties": {
            "author": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "performance": {
          "$ref": "#/definitions/PerformanceMetrics"
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "version",
        "category",
        "parameters",
        "execution"
      ]
    },

    "Pattern": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 10
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "category": {
          "type": "string",
          "enum": [
            "workflow",
            "documentation",
            "architecture",
            "testing",
            "deployment"
          ]
        },
        "applicability": {
          "type": "object",
          "properties": {
            "projectTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "contexts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExecutionContext"
              }
            }
          }
        },
        "implementation": {
          "type": "object",
          "properties": {
            "steps": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "toolId": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": "object"
                  },
                  "conditionalLogic": {
                    "type": "string"
                  }
                },
                "required": ["name", "description"]
              }
            },
            "expectedOutcomes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["steps"]
        },
        "metrics": {
          "type": "object",
          "properties": {
            "successRate": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "averageExecutionTime": {
              "type": "number",
              "minimum": 0
            },
            "usageCount": {
              "type": "integer",
              "minimum": 0
            }
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "version",
        "category",
        "implementation"
      ]
    },

    "Constraint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 10
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "category": {
          "type": "string",
          "enum": [
            "code-quality",
            "documentation",
            "security",
            "performance",
            "compliance"
          ]
        },
        "enforcement": {
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "enum": ["error", "warning", "info"]
            },
            "autoFix": {
              "type": "boolean",
              "default": false
            },
            "validationScope": {
              "type": "string"
            },
            "frequency": {
              "type": "string",
              "enum": ["on-save", "on-commit", "on-push", "scheduled", "manual"]
            }
          },
          "required": ["level", "validationScope"]
        },
        "validation": {
          "$ref": "#/definitions/ValidationRule"
        },
        "remediation": {
          "type": "object",
          "properties": {
            "instructions": {
              "type": "string"
            },
            "autoFixCommand": {
              "type": "string"
            },
            "relatedTools": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "version",
        "category",
        "enforcement",
        "validation"
      ]
    },

    "LearningRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "context": {
          "$ref": "#/definitions/ExecutionContext"
        },
        "toolId": {
          "type": "string"
        },
        "patternId": {
          "type": "string"
        },
        "outcome": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean"
            },
            "executionTime": {
              "type": "number"
            },
            "errorMessage": {
              "type": "string"
            },
            "metrics": {
              "$ref": "#/definitions/PerformanceMetrics"
            }
          },
          "required": ["success"]
        },
        "insights": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "optimization",
                  "error-pattern",
                  "usage-pattern",
                  "improvement"
                ]
              },
              "description": {
                "type": "string"
              },
              "confidence": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            }
          }
        }
      },
      "required": ["id", "timestamp", "context", "outcome"]
    },

    "GovernancePolicy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 10
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "scope": {
          "type": "string",
          "enum": ["system", "project", "user", "session"]
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "condition": {
                "type": "string"
              },
              "action": {
                "type": "string",
                "enum": ["allow", "deny", "require-approval", "log", "warn"]
              },
              "message": {
                "type": "string"
              }
            },
            "required": ["condition", "action"]
          }
        },
        "qualityGates": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "criteria": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ValidationRule"
                }
              },
              "required": {
                "type": "boolean",
                "default": true
              }
            }
          }
        }
      },
      "required": ["id", "name", "description", "version", "scope", "rules"]
    }
  },

  "type": "object",
  "properties": {
    "tools": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tool"
      }
    },
    "patterns": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pattern"
      }
    },
    "constraints": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Constraint"
      }
    },
    "learning": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LearningRecord"
      }
    },
    "governance": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GovernancePolicy"
      }
    }
  }
}
