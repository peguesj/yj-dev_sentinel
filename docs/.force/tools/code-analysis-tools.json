{
  "$schema": "../schemas/force-schema.json",
  "version": "1.0.0",
  "metadata": {
    "name": "Code Analysis Tools",
    "description": "Force tools for static code analysis, quality checks, and security scanning",
    "author": "Dev Sentinel Force System",
    "created": "2025-06-24T00:00:00Z",
    "updated": "2025-06-24T00:00:00Z"
  },
  "tools": [
    {
      "name": "static-analysis",
      "description": "Perform comprehensive static analysis of source code",
      "category": "code_analysis",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "type": "string",
            "description": "Path to source code directory or file",
            "required": true
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "python",
                "javascript",
                "typescript",
                "java",
                "cpp",
                "go",
                "rust"
              ]
            },
            "description": "Programming languages to analyze",
            "default": ["python"]
          },
          "analysis_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "syntax",
                "semantic",
                "style",
                "complexity",
                "security",
                "performance"
              ]
            },
            "description": "Types of analysis to perform",
            "default": ["syntax", "style", "complexity"]
          },
          "severity_threshold": {
            "type": "string",
            "enum": ["info", "warning", "error", "critical"],
            "description": "Minimum severity level to report",
            "default": "warning"
          },
          "exclude_patterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "File patterns to exclude from analysis",
            "default": ["test_*", "*_test.*", "*.min.*", "node_modules/*"]
          }
        },
        "required": ["source_path"]
      },
      "execution": {
        "command": "force_static_analysis",
        "timeout": 600,
        "retry_count": 2
      },
      "outputs": {
        "type": "object",
        "properties": {
          "analysis_summary": {
            "type": "object",
            "properties": {
              "files_analyzed": { "type": "number" },
              "total_issues": { "type": "number" },
              "critical_issues": { "type": "number" },
              "error_issues": { "type": "number" },
              "warning_issues": { "type": "number" },
              "info_issues": { "type": "number" }
            },
            "description": "Summary of analysis results"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": { "type": "string" },
                "line": { "type": "number" },
                "column": { "type": "number" },
                "severity": { "type": "string" },
                "category": { "type": "string" },
                "rule": { "type": "string" },
                "message": { "type": "string" },
                "fix_suggestion": { "type": "string" }
              }
            },
            "description": "Detailed list of issues found"
          },
          "metrics": {
            "type": "object",
            "properties": {
              "complexity_metrics": { "type": "object" },
              "maintainability_index": { "type": "number" },
              "technical_debt": { "type": "string" }
            },
            "description": "Code quality metrics"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to source code files"
        }
      ]
    },
    {
      "name": "code-quality-check",
      "description": "Check code quality against established standards and best practices",
      "category": "code_analysis",
      "type": "validation",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "type": "string",
            "description": "Path to source code directory or file",
            "required": true
          },
          "quality_standards": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["pep8", "eslint", "google", "airbnb", "custom"]
            },
            "description": "Quality standards to check against",
            "default": ["pep8"]
          },
          "quality_threshold": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum quality score required (0-100)",
            "default": 80
          },
          "include_metrics": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "complexity",
                "duplication",
                "maintainability",
                "testability"
              ]
            },
            "description": "Quality metrics to include",
            "default": ["complexity", "maintainability"]
          }
        },
        "required": ["source_path"]
      },
      "execution": {
        "command": "force_code_quality_check",
        "timeout": 300,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "quality_score": {
            "type": "number",
            "description": "Overall code quality score (0-100)"
          },
          "quality_breakdown": {
            "type": "object",
            "properties": {
              "style": { "type": "number" },
              "complexity": { "type": "number" },
              "maintainability": { "type": "number" },
              "testability": { "type": "number" }
            },
            "description": "Quality scores by category"
          },
          "violations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": { "type": "string" },
                "line": { "type": "number" },
                "standard": { "type": "string" },
                "violation": { "type": "string" },
                "severity": { "type": "string" },
                "fix": { "type": "string" }
              }
            },
            "description": "Quality standard violations found"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": { "type": "string" },
                "priority": { "type": "string" },
                "description": { "type": "string" },
                "impact": { "type": "string" }
              }
            },
            "description": "Quality improvement recommendations"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to source code files"
        }
      ]
    },
    {
      "name": "security-analysis",
      "description": "Perform security analysis to identify potential vulnerabilities",
      "category": "security",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "type": "string",
            "description": "Path to source code directory or file",
            "required": true
          },
          "scan_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "injection",
                "authentication",
                "authorization",
                "encryption",
                "input_validation",
                "dependencies"
              ]
            },
            "description": "Types of security scans to perform",
            "default": ["injection", "authentication", "input_validation"]
          },
          "severity_levels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["low", "medium", "high", "critical"]
            },
            "description": "Severity levels to report",
            "default": ["medium", "high", "critical"]
          },
          "include_dependencies": {
            "type": "boolean",
            "description": "Whether to scan dependencies for vulnerabilities",
            "default": true
          }
        },
        "required": ["source_path"]
      },
      "execution": {
        "command": "force_security_analysis",
        "timeout": 900,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "security_score": {
            "type": "number",
            "description": "Overall security score (0-100)"
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "file": { "type": "string" },
                "line": { "type": "number" },
                "severity": { "type": "string" },
                "category": { "type": "string" },
                "description": { "type": "string" },
                "cwe_id": { "type": "string" },
                "cvss_score": { "type": "number" },
                "fix_recommendation": { "type": "string" }
              }
            },
            "description": "Security vulnerabilities found"
          },
          "dependency_vulnerabilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": { "type": "string" },
                "version": { "type": "string" },
                "vulnerability": { "type": "string" },
                "severity": { "type": "string" },
                "fixed_version": { "type": "string" }
              }
            },
            "description": "Vulnerable dependencies found"
          },
          "security_recommendations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": { "type": "string" },
                "priority": { "type": "string" },
                "description": { "type": "string" },
                "implementation": { "type": "string" }
              }
            },
            "description": "Security improvement recommendations"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to source code and dependency files"
        },
        {
          "type": "network_access",
          "description": "May require network access for vulnerability database updates"
        }
      ]
    },
    {
      "name": "dependency-analysis",
      "description": "Analyze project dependencies for security, licensing, and updates",
      "category": "dependencies",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "dependency_files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Dependency files to analyze",
            "default": [
              "requirements.txt",
              "package.json",
              "Gemfile",
              "pom.xml",
              "Cargo.toml"
            ]
          },
          "check_vulnerabilities": {
            "type": "boolean",
            "description": "Whether to check for known vulnerabilities",
            "default": true
          },
          "check_licenses": {
            "type": "boolean",
            "description": "Whether to check license compatibility",
            "default": true
          },
          "check_updates": {
            "type": "boolean",
            "description": "Whether to check for available updates",
            "default": true
          }
        },
        "required": ["project_path"]
      },
      "execution": {
        "command": "force_dependency_analysis",
        "timeout": 300,
        "retry_count": 2
      },
      "outputs": {
        "type": "object",
        "properties": {
          "dependency_summary": {
            "type": "object",
            "properties": {
              "total_dependencies": { "type": "number" },
              "direct_dependencies": { "type": "number" },
              "transitive_dependencies": { "type": "number" },
              "vulnerable_dependencies": { "type": "number" },
              "outdated_dependencies": { "type": "number" }
            },
            "description": "Summary of dependency analysis"
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": { "type": "string" },
                "version": { "type": "string" },
                "vulnerability_id": { "type": "string" },
                "severity": { "type": "string" },
                "description": { "type": "string" },
                "fixed_version": { "type": "string" }
              }
            },
            "description": "Vulnerable dependencies found"
          },
          "license_issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": { "type": "string" },
                "license": { "type": "string" },
                "issue": { "type": "string" },
                "severity": { "type": "string" }
              }
            },
            "description": "License compatibility issues"
          },
          "update_recommendations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": { "type": "string" },
                "current_version": { "type": "string" },
                "latest_version": { "type": "string" },
                "update_type": { "type": "string" },
                "breaking_changes": { "type": "boolean" }
              }
            },
            "description": "Available dependency updates"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to dependency files"
        },
        {
          "type": "network_access",
          "description": "Requires network access for vulnerability and update checks"
        }
      ]
    },
    {
      "name": "issue-detection",
      "description": "Detect various types of code issues including bugs, code smells, and anti-patterns",
      "category": "code_analysis",
      "type": "detection",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "type": "string",
            "description": "Path to source code directory or file",
            "required": true
          },
          "issue_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "bugs",
                "code_smells",
                "anti_patterns",
                "performance",
                "memory_leaks",
                "dead_code"
              ]
            },
            "description": "Types of issues to detect",
            "default": ["bugs", "code_smells", "performance"]
          },
          "confidence_threshold": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum confidence level for issue detection (0-100)",
            "default": 70
          },
          "include_suggestions": {
            "type": "boolean",
            "description": "Whether to include fix suggestions",
            "default": true
          }
        },
        "required": ["source_path"]
      },
      "execution": {
        "command": "force_issue_detection",
        "timeout": 450,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "issues_summary": {
            "type": "object",
            "properties": {
              "total_issues": { "type": "number" },
              "high_priority": { "type": "number" },
              "medium_priority": { "type": "number" },
              "low_priority": { "type": "number" }
            },
            "description": "Summary of detected issues"
          },
          "detected_issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "file": { "type": "string" },
                "line": { "type": "number" },
                "type": { "type": "string" },
                "severity": { "type": "string" },
                "confidence": { "type": "number" },
                "description": { "type": "string" },
                "suggestion": { "type": "string" },
                "example_fix": { "type": "string" }
              }
            },
            "description": "Detailed list of detected issues"
          },
          "patterns_found": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pattern": { "type": "string" },
                "occurrences": { "type": "number" },
                "files": { "type": "array", "items": { "type": "string" } },
                "recommendation": { "type": "string" }
              }
            },
            "description": "Common patterns and anti-patterns found"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to source code files"
        }
      ]
    },
    {
      "name": "performance-analysis",
      "description": "Analyze code for performance issues and optimization opportunities",
      "category": "performance",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "type": "string",
            "description": "Path to source code directory or file",
            "required": true
          },
          "analysis_scope": {
            "type": "string",
            "enum": ["algorithmic", "memory", "io", "network", "comprehensive"],
            "description": "Scope of performance analysis",
            "default": "comprehensive"
          },
          "profiling_data": {
            "type": "string",
            "description": "Path to profiling data file (optional)"
          },
          "target_platform": {
            "type": "string",
            "enum": ["web", "mobile", "server", "desktop", "embedded"],
            "description": "Target platform for optimization recommendations",
            "default": "server"
          }
        },
        "required": ["source_path"]
      },
      "execution": {
        "command": "force_performance_analysis",
        "timeout": 360,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "performance_score": {
            "type": "number",
            "description": "Overall performance score (0-100)"
          },
          "bottlenecks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": { "type": "string" },
                "function": { "type": "string" },
                "line": { "type": "number" },
                "type": { "type": "string" },
                "severity": { "type": "string" },
                "impact": { "type": "string" },
                "optimization": { "type": "string" }
              }
            },
            "description": "Performance bottlenecks identified"
          },
          "optimization_opportunities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": { "type": "string" },
                "priority": { "type": "string" },
                "description": { "type": "string" },
                "potential_gain": { "type": "string" },
                "implementation_effort": { "type": "string" }
              }
            },
            "description": "Performance optimization opportunities"
          },
          "metrics": {
            "type": "object",
            "properties": {
              "complexity_score": { "type": "number" },
              "memory_efficiency": { "type": "number" },
              "algorithmic_efficiency": { "type": "number" }
            },
            "description": "Performance metrics"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to source code files"
        }
      ]
    }
  ]
}
