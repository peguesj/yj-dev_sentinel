{
  "$schema": "../schemas/force-schema.json",
  "version": "1.0.0",
  "metadata": {
    "name": "Documentation Tools",
    "description": "Force tools for documentation analysis, validation, and generation",
    "author": "Dev Sentinel Force System",
    "created": "2025-06-24T00:00:00Z",
    "updated": "2025-06-24T00:00:00Z"
  },
  "tools": [
    {
      "name": "docs-analysis",
      "description": "Analyze project documentation comprehensively",
      "category": "documentation",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "include_patterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "File patterns to include in analysis",
            "default": ["*.md", "*.rst", "*.txt", "*.py", "*.js", "*.ts"]
          },
          "analysis_depth": {
            "type": "string",
            "enum": ["surface", "detailed", "comprehensive"],
            "description": "Depth of analysis to perform",
            "default": "detailed"
          },
          "check_links": {
            "type": "boolean",
            "description": "Whether to validate external links",
            "default": true
          },
          "check_images": {
            "type": "boolean", 
            "description": "Whether to validate image references",
            "default": true
          }
        },
        "required": ["project_path"]
      },
      "execution": {
        "command": "force_docs_analysis",
        "timeout": 300,
        "retry_count": 2
      },
      "outputs": {
        "type": "object",
        "properties": {
          "documentation_coverage": {
            "type": "number",
            "description": "Percentage of code covered by documentation"
          },
          "missing_docs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of files/functions missing documentation"
          },
          "broken_links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": {"type": "string"},
                "line": {"type": "number"},
                "link": {"type": "string"},
                "error": {"type": "string"}
              }
            },
            "description": "List of broken links found"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {"type": "string"},
                "priority": {"type": "string"},
                "description": {"type": "string"},
                "location": {"type": "string"}
              }
            },
            "description": "Improvement suggestions"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to project files"
        }
      ]
    },
    {
      "name": "readme-analysis",
      "description": "Analyze README files for completeness and accuracy",
      "category": "documentation",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "readme_path": {
            "type": "string",
            "description": "Path to README file",
            "required": true
          },
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "check_sections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required sections to validate",
            "default": ["Title", "Description", "Installation", "Usage", "License"]
          },
          "validate_code_examples": {
            "type": "boolean",
            "description": "Whether to validate code examples in README",
            "default": true
          }
        },
        "required": ["readme_path", "project_path"]
      },
      "execution": {
        "command": "force_readme_analysis",
        "timeout": 180,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "completeness_score": {
            "type": "number",
            "description": "README completeness score (0-100)"
          },
          "missing_sections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required sections that are missing"
          },
          "outdated_content": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "section": {"type": "string"},
                "issue": {"type": "string"},
                "suggestion": {"type": "string"}
              }
            },
            "description": "Content that appears outdated"
          },
          "code_examples_status": {
            "type": "object",
            "properties": {
              "total": {"type": "number"},
              "valid": {"type": "number"},
              "invalid": {"type": "array", "items": {"type": "string"}}
            },
            "description": "Status of code examples in README"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to README and project files"
        }
      ]
    },
    {
      "name": "docs-validation",
      "description": "Validate documentation against standards and best practices",
      "category": "documentation",
      "type": "validation",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "docs_path": {
            "type": "string",
            "description": "Path to documentation directory or file",
            "required": true
          },
          "standards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Documentation standards to validate against",
            "default": ["markdown", "accessibility", "readability"]
          },
          "spelling_check": {
            "type": "boolean",
            "description": "Whether to perform spell checking",
            "default": true
          },
          "grammar_check": {
            "type": "boolean",
            "description": "Whether to perform grammar checking",
            "default": false
          }
        },
        "required": ["docs_path"]
      },
      "execution": {
        "command": "force_docs_validation",
        "timeout": 240,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "validation_score": {
            "type": "number",
            "description": "Overall validation score (0-100)"
          },
          "violations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": {"type": "string"},
                "line": {"type": "number"},
                "rule": {"type": "string"},
                "severity": {"type": "string"},
                "message": {"type": "string"}
              }
            },
            "description": "Standards violations found"
          },
          "spelling_errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": {"type": "string"},
                "line": {"type": "number"},
                "word": {"type": "string"},
                "suggestions": {"type": "array", "items": {"type": "string"}}
              }
            },
            "description": "Spelling errors found"
          },
          "readability_metrics": {
            "type": "object",
            "properties": {
              "flesch_score": {"type": "number"},
              "grade_level": {"type": "string"},
              "avg_sentence_length": {"type": "number"}
            },
            "description": "Readability analysis metrics"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to documentation files"
        }
      ]
    },
    {
      "name": "docs-generation",
      "description": "Generate missing documentation automatically",
      "category": "documentation",
      "type": "generation",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "target_files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specific files to generate documentation for",
            "default": []
          },
          "doc_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["api", "readme", "changelog", "contributing", "license"]
            },
            "description": "Types of documentation to generate",
            "default": ["api", "readme"]
          },
          "output_format": {
            "type": "string",
            "enum": ["markdown", "rst", "html"],
            "description": "Output format for generated documentation",
            "default": "markdown"
          },
          "include_examples": {
            "type": "boolean",
            "description": "Whether to include code examples",
            "default": true
          }
        },
        "required": ["project_path"]
      },
      "execution": {
        "command": "force_docs_generation",
        "timeout": 600,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "generated_files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of files that were generated"
          },
          "updated_files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of files that were updated"
          },
          "generation_summary": {
            "type": "object",
            "properties": {
              "total_functions": {"type": "number"},
              "documented_functions": {"type": "number"},
              "new_docs": {"type": "number"}
            },
            "description": "Summary of documentation generation"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read/write access to project files"
        }
      ]
    },
    {
      "name": "docs-extraction",
      "description": "Extract and parse existing documentation from source code",
      "category": "documentation",
      "type": "extraction",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "source_path": {
            "type": "string",
            "description": "Path to source code directory",
            "required": true
          },
          "file_patterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "File patterns to extract documentation from",
            "default": ["*.py", "*.js", "*.ts", "*.java", "*.cpp", "*.h"]
          },
          "extract_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["docstrings", "comments", "annotations", "type_hints"]
            },
            "description": "Types of documentation to extract",
            "default": ["docstrings", "comments"]
          },
          "output_path": {
            "type": "string",
            "description": "Path to output extracted documentation",
            "default": "./docs/extracted"
          }
        },
        "required": ["source_path"]
      },
      "execution": {
        "command": "force_docs_extraction",
        "timeout": 300,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "extracted_docs": {
            "type": "object",
            "description": "Structured extracted documentation"
          },
          "extraction_stats": {
            "type": "object",
            "properties": {
              "files_processed": {"type": "number"},
              "functions_found": {"type": "number"},
              "documented_functions": {"type": "number"},
              "classes_found": {"type": "number"},
              "documented_classes": {"type": "number"}
            },
            "description": "Statistics about extraction process"
          },
          "output_files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of output files created"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to source files and write access to output directory"
        }
      ]
    },
    {
      "name": "docs-completeness-check",
      "description": "Check documentation completeness across the entire project",
      "category": "documentation",
      "type": "validation",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "coverage_threshold": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum documentation coverage percentage required",
            "default": 80
          },
          "check_external_apis": {
            "type": "boolean",
            "description": "Whether to check external API documentation",
            "default": true
          },
          "ignore_patterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "File patterns to ignore in completeness check",
            "default": ["test_*", "*_test.*", "*.min.*"]
          }
        },
        "required": ["project_path"]
      },
      "execution": {
        "command": "force_docs_completeness_check",
        "timeout": 180,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "overall_completeness": {
            "type": "number",
            "description": "Overall documentation completeness percentage"
          },
          "completeness_by_category": {
            "type": "object",
            "properties": {
              "functions": {"type": "number"},
              "classes": {"type": "number"},
              "modules": {"type": "number"},
              "apis": {"type": "number"}
            },
            "description": "Completeness breakdown by category"
          },
          "undocumented_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file": {"type": "string"},
                "line": {"type": "number"},
                "item": {"type": "string"},
                "type": {"type": "string"},
                "priority": {"type": "string"}
              }
            },
            "description": "List of undocumented items"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {"type": "string"},
                "priority": {"type": "string"},
                "description": {"type": "string"},
                "action": {"type": "string"}
              }
            },
            "description": "Recommendations for improving documentation"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to project files"
        }
      ]
    },
    {
      "name": "docs-improvement-suggestions",
      "description": "Generate suggestions for improving existing documentation",
      "category": "documentation",
      "type": "analysis",
      "version": "1.0.0",
      "parameters": {
        "type": "object",
        "properties": {
          "docs_path": {
            "type": "string",
            "description": "Path to documentation to analyze",
            "required": true
          },
          "analysis_focus": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["clarity", "completeness", "accuracy", "structure", "examples"]
            },
            "description": "Areas to focus improvement suggestions on",
            "default": ["clarity", "completeness", "accuracy"]
          },
          "target_audience": {
            "type": "string",
            "enum": ["developer", "user", "contributor", "all"],
            "description": "Target audience for documentation improvements",
            "default": "all"
          }
        },
        "required": ["docs_path"]
      },
      "execution": {
        "command": "force_docs_improvement_suggestions",
        "timeout": 240,
        "retry_count": 1
      },
      "outputs": {
        "type": "object",
        "properties": {
          "suggestions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {"type": "string"},
                "priority": {"type": "string"},
                "current_text": {"type": "string"},
                "suggested_text": {"type": "string"},
                "rationale": {"type": "string"},
                "location": {"type": "string"}
              }
            },
            "description": "Specific improvement suggestions"
          },
          "improvement_score": {
            "type": "number",
            "description": "Potential improvement score (0-100)"
          },
          "priority_areas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Areas that need the most improvement"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to documentation files"
        }
      ]
    }
  ]
}
