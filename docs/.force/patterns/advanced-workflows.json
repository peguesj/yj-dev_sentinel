{
  "$schema": "../schemas/force-schema.json",
  "version": "1.0.0",
  "metadata": {
    "name": "Advanced Development Workflows",
    "description": "Sophisticated Force patterns for complex development workflows",
    "author": "Dev Sentinel Force System",
    "created": "2025-06-24T00:00:00Z",
    "updated": "2025-06-24T00:00:00Z"
  },
  "patterns": [
    {
      "name": "comprehensive-analysis-workflow",
      "description": "Complete project analysis including code, documentation, security, and dependencies",
      "category": "analysis",
      "type": "workflow",
      "version": "1.0.0",
      "trigger": {
        "type": "manual",
        "conditions": [
          {
            "type": "exists",
            "field": "project_path"
          }
        ]
      },
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "analysis_depth": {
            "type": "string",
            "enum": ["quick", "standard", "thorough"],
            "description": "Depth of analysis to perform",
            "default": "standard"
          },
          "include_security": {
            "type": "boolean",
            "description": "Whether to include security analysis",
            "default": true
          },
          "include_performance": {
            "type": "boolean",
            "description": "Whether to include performance analysis",
            "default": true
          }
        },
        "required": ["project_path"]
      },
      "steps": [
        {
          "name": "project_structure_analysis",
          "description": "Analyze project structure and organization",
          "type": "tool",
          "tool": "project-structure-analysis",
          "parameters": {
            "project_path": "${project_path}"
          },
          "continue_on_error": false
        },
        {
          "name": "git_analysis",
          "description": "Analyze git repository status and history",
          "type": "tool",
          "tool": "git-status",
          "parameters": {
            "repository_path": "${project_path}"
          },
          "continue_on_error": true
        },
        {
          "name": "code_analysis",
          "description": "Perform static code analysis",
          "type": "tool",
          "tool": "static-analysis",
          "parameters": {
            "source_path": "${project_path}",
            "analysis_types": ["syntax", "style", "complexity"]
          },
          "continue_on_error": true
        },
        {
          "name": "documentation_analysis",
          "description": "Analyze project documentation",
          "type": "tool",
          "tool": "docs-analysis",
          "parameters": {
            "project_path": "${project_path}"
          },
          "continue_on_error": true
        },
        {
          "name": "dependency_analysis",
          "description": "Analyze project dependencies",
          "type": "tool",
          "tool": "dependency-analysis",
          "parameters": {
            "project_path": "${project_path}"
          },
          "continue_on_error": true
        },
        {
          "name": "security_analysis",
          "description": "Perform security analysis if requested",
          "type": "conditional",
          "condition": {
            "type": "equals",
            "field": "include_security",
            "value": true
          },
          "then": {
            "type": "tool",
            "tool": "security-analysis",
            "parameters": {
              "source_path": "${project_path}"
            }
          }
        },
        {
          "name": "performance_analysis",
          "description": "Perform performance analysis if requested",
          "type": "conditional",
          "condition": {
            "type": "equals",
            "field": "include_performance",
            "value": true
          },
          "then": {
            "type": "tool",
            "tool": "performance-analysis",
            "parameters": {
              "source_path": "${project_path}"
            }
          }
        },
        {
          "name": "generate_report",
          "description": "Generate comprehensive analysis report",
          "type": "tool",
          "tool": "generate-analysis-report",
          "parameters": {
            "analysis_results": "${all_results}",
            "project_path": "${project_path}"
          },
          "continue_on_error": false
        }
      ],
      "outputs": {
        "type": "object",
        "properties": {
          "analysis_summary": {
            "type": "object",
            "description": "Summary of all analysis results"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Prioritized improvement recommendations"
          },
          "report_path": {
            "type": "string",
            "description": "Path to generated analysis report"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to project files"
        }
      ]
    },
    {
      "name": "code-review-workflow",
      "description": "Automated code review workflow with quality gates and feedback generation",
      "category": "quality_assurance",
      "type": "workflow",
      "version": "1.0.0",
      "trigger": {
        "type": "git_event",
        "events": ["pull_request", "commit"]
      },
      "parameters": {
        "type": "object",
        "properties": {
          "target_branch": {
            "type": "string",
            "description": "Target branch for comparison",
            "default": "main"
          },
          "source_branch": {
            "type": "string",
            "description": "Source branch or commit to review",
            "required": true
          },
          "repository_path": {
            "type": "string",
            "description": "Path to git repository",
            "required": true
          },
          "quality_threshold": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum quality score required for approval",
            "default": 80
          }
        },
        "required": ["source_branch", "repository_path"]
      },
      "steps": [
        {
          "name": "get_changed_files",
          "description": "Get list of files changed in the branch/commit",
          "type": "tool",
          "tool": "git-diff",
          "parameters": {
            "repository_path": "${repository_path}",
            "target_branch": "${target_branch}",
            "source_branch": "${source_branch}"
          },
          "continue_on_error": false
        },
        {
          "name": "analyze_changed_code",
          "description": "Analyze quality of changed code",
          "type": "tool",
          "tool": "code-quality-check",
          "parameters": {
            "source_path": "${changed_files}",
            "quality_threshold": "${quality_threshold}"
          },
          "continue_on_error": false
        },
        {
          "name": "security_scan",
          "description": "Scan changed code for security issues",
          "type": "tool",
          "tool": "security-analysis",
          "parameters": {
            "source_path": "${changed_files}",
            "severity_levels": ["medium", "high", "critical"]
          },
          "continue_on_error": true
        },
        {
          "name": "check_documentation",
          "description": "Verify documentation is updated for changes",
          "type": "tool",
          "tool": "docs-validation",
          "parameters": {
            "docs_path": "${repository_path}",
            "changed_files": "${changed_files}"
          },
          "continue_on_error": true
        },
        {
          "name": "run_tests",
          "description": "Execute relevant tests for changed code",
          "type": "tool",
          "tool": "test-execution",
          "parameters": {
            "test_scope": "changed",
            "project_path": "${repository_path}",
            "changed_files": "${changed_files}"
          },
          "continue_on_error": false
        },
        {
          "name": "quality_gate_check",
          "description": "Check if quality gate criteria are met",
          "type": "condition",
          "condition": {
            "type": "greater_than",
            "field": "overall_quality_score",
            "value": "${quality_threshold}"
          }
        },
        {
          "name": "generate_review_feedback",
          "description": "Generate detailed review feedback",
          "type": "tool",
          "tool": "generate-review-feedback",
          "parameters": {
            "analysis_results": "${all_results}",
            "quality_gate_passed": "${quality_gate_result}"
          },
          "continue_on_error": false
        }
      ],
      "outputs": {
        "type": "object",
        "properties": {
          "review_status": {
            "type": "string",
            "enum": ["approved", "needs_work", "rejected"]
          },
          "quality_score": {
            "type": "number"
          },
          "feedback": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "blocking_issues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "constraints": [
        {
          "type": "git_access",
          "description": "Requires access to git repository"
        }
      ]
    },
    {
      "name": "pre-release-workflow",
      "description": "Comprehensive pre-release checks and preparation workflow",
      "category": "release_management",
      "type": "workflow",
      "version": "1.0.0",
      "trigger": {
        "type": "manual",
        "conditions": [
          {
            "type": "exists",
            "field": "release_version"
          }
        ]
      },
      "parameters": {
        "type": "object",
        "properties": {
          "release_version": {
            "type": "string",
            "description": "Version number for the release",
            "required": true
          },
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "release_branch": {
            "type": "string",
            "description": "Release branch name",
            "default": "release/${release_version}"
          },
          "skip_tests": {
            "type": "boolean",
            "description": "Whether to skip test execution",
            "default": false
          }
        },
        "required": ["release_version", "project_path"]
      },
      "steps": [
        {
          "name": "version_validation",
          "description": "Validate release version format and uniqueness",
          "type": "tool",
          "tool": "validate-version",
          "parameters": {
            "version": "${release_version}",
            "project_path": "${project_path}"
          },
          "continue_on_error": false
        },
        {
          "name": "complete_analysis",
          "description": "Run comprehensive project analysis",
          "type": "pattern",
          "pattern": "comprehensive-analysis-workflow",
          "parameters": {
            "project_path": "${project_path}",
            "analysis_depth": "thorough"
          },
          "continue_on_error": false
        },
        {
          "name": "full_test_suite",
          "description": "Execute complete test suite",
          "type": "conditional",
          "condition": {
            "type": "equals",
            "field": "skip_tests",
            "value": false
          },
          "then": {
            "type": "tool",
            "tool": "test-execution",
            "parameters": {
              "test_scope": "all",
              "project_path": "${project_path}",
              "coverage_threshold": 80
            }
          }
        },
        {
          "name": "documentation_update",
          "description": "Update documentation for release",
          "type": "tool",
          "tool": "update-release-documentation",
          "parameters": {
            "project_path": "${project_path}",
            "release_version": "${release_version}"
          },
          "continue_on_error": false
        },
        {
          "name": "changelog_generation",
          "description": "Generate changelog for release",
          "type": "tool",
          "tool": "generate-changelog",
          "parameters": {
            "project_path": "${project_path}",
            "release_version": "${release_version}"
          },
          "continue_on_error": false
        },
        {
          "name": "security_audit",
          "description": "Perform final security audit",
          "type": "tool",
          "tool": "security-analysis",
          "parameters": {
            "source_path": "${project_path}",
            "severity_levels": ["high", "critical"]
          },
          "continue_on_error": false
        },
        {
          "name": "dependency_audit",
          "description": "Audit dependencies for vulnerabilities",
          "type": "tool",
          "tool": "dependency-analysis",
          "parameters": {
            "project_path": "${project_path}",
            "check_vulnerabilities": true
          },
          "continue_on_error": false
        },
        {
          "name": "release_readiness_check",
          "description": "Check if release is ready",
          "type": "tool",
          "tool": "check-release-readiness",
          "parameters": {
            "analysis_results": "${all_results}",
            "project_path": "${project_path}"
          },
          "continue_on_error": false
        }
      ],
      "outputs": {
        "type": "object",
        "properties": {
          "release_ready": {
            "type": "boolean"
          },
          "readiness_score": {
            "type": "number"
          },
          "blocking_issues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "release_notes": {
            "type": "string"
          },
          "changelog_path": {
            "type": "string"
          }
        }
      },
      "constraints": [
        {
          "type": "git_access",
          "description": "Requires git repository access"
        }
      ]
    },
    {
      "name": "security-audit-workflow",
      "description": "Comprehensive security audit and vulnerability assessment workflow",
      "category": "security",
      "type": "workflow",
      "version": "1.0.0",
      "trigger": {
        "type": "scheduled",
        "schedule": "weekly"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "audit_scope": {
            "type": "string",
            "enum": ["basic", "standard", "comprehensive"],
            "description": "Scope of security audit",
            "default": "standard"
          },
          "include_dependencies": {
            "type": "boolean",
            "description": "Whether to audit dependencies",
            "default": true
          },
          "generate_report": {
            "type": "boolean",
            "description": "Whether to generate detailed security report",
            "default": true
          }
        },
        "required": ["project_path"]
      },
      "steps": [
        {
          "name": "static_security_analysis",
          "description": "Perform static security analysis on source code",
          "type": "tool",
          "tool": "security-analysis",
          "parameters": {
            "source_path": "${project_path}",
            "scan_types": ["injection", "authentication", "authorization", "encryption", "input_validation"],
            "severity_levels": ["low", "medium", "high", "critical"]
          },
          "continue_on_error": false
        },
        {
          "name": "dependency_security_scan",
          "description": "Scan dependencies for known vulnerabilities",
          "type": "conditional",
          "condition": {
            "type": "equals",
            "field": "include_dependencies",
            "value": true
          },
          "then": {
            "type": "tool",
            "tool": "dependency-analysis",
            "parameters": {
              "project_path": "${project_path}",
              "check_vulnerabilities": true,
              "check_licenses": true
            }
          }
        },
        {
          "name": "configuration_security_check",
          "description": "Check security configuration and settings",
          "type": "tool",
          "tool": "security-configuration-check",
          "parameters": {
            "project_path": "${project_path}"
          },
          "continue_on_error": true
        },
        {
          "name": "secrets_scan",
          "description": "Scan for exposed secrets and credentials",
          "type": "tool",
          "tool": "secrets-scan",
          "parameters": {
            "source_path": "${project_path}"
          },
          "continue_on_error": true
        },
        {
          "name": "infrastructure_security_check",
          "description": "Check infrastructure-as-code for security issues",
          "type": "tool",
          "tool": "infrastructure-security-check",
          "parameters": {
            "project_path": "${project_path}"
          },
          "continue_on_error": true
        },
        {
          "name": "compliance_check",
          "description": "Check compliance with security standards",
          "type": "tool",
          "tool": "compliance-check",
          "parameters": {
            "project_path": "${project_path}",
            "standards": ["OWASP", "CWE", "NIST"]
          },
          "continue_on_error": true
        },
        {
          "name": "generate_security_report",
          "description": "Generate comprehensive security report",
          "type": "conditional",
          "condition": {
            "type": "equals",
            "field": "generate_report",
            "value": true
          },
          "then": {
            "type": "tool",
            "tool": "generate-security-report",
            "parameters": {
              "audit_results": "${all_results}",
              "project_path": "${project_path}"
            }
          }
        }
      ],
      "outputs": {
        "type": "object",
        "properties": {
          "security_score": {
            "type": "number",
            "description": "Overall security score (0-100)"
          },
          "critical_vulnerabilities": {
            "type": "number"
          },
          "high_vulnerabilities": {
            "type": "number"
          },
          "medium_vulnerabilities": {
            "type": "number"
          },
          "compliance_status": {
            "type": "object"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "report_path": {
            "type": "string"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read access to project files"
        }
      ]
    },
    {
      "name": "documentation-update-workflow",
      "description": "Automated documentation update and synchronization workflow",
      "category": "documentation",
      "type": "workflow",
      "version": "1.0.0",
      "trigger": {
        "type": "file_change",
        "patterns": ["*.py", "*.js", "*.ts", "*.java"]
      },
      "parameters": {
        "type": "object",
        "properties": {
          "project_path": {
            "type": "string",
            "description": "Path to project root directory",
            "required": true
          },
          "changed_files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of files that changed",
            "default": []
          },
          "update_scope": {
            "type": "string",
            "enum": ["changed_only", "related", "complete"],
            "description": "Scope of documentation update",
            "default": "related"
          },
          "auto_commit": {
            "type": "boolean",
            "description": "Whether to automatically commit documentation changes",
            "default": false
          }
        },
        "required": ["project_path"]
      },
      "steps": [
        {
          "name": "analyze_code_changes",
          "description": "Analyze what code changes might affect documentation",
          "type": "tool",
          "tool": "analyze-code-changes",
          "parameters": {
            "changed_files": "${changed_files}",
            "project_path": "${project_path}"
          },
          "continue_on_error": false
        },
        {
          "name": "extract_documentation",
          "description": "Extract documentation from changed source files",
          "type": "tool",
          "tool": "docs-extraction",
          "parameters": {
            "source_path": "${changed_files}",
            "extract_types": ["docstrings", "comments", "annotations"]
          },
          "continue_on_error": true
        },
        {
          "name": "update_api_documentation",
          "description": "Update API documentation based on code changes",
          "type": "tool",
          "tool": "update-api-docs",
          "parameters": {
            "project_path": "${project_path}",
            "changed_files": "${changed_files}"
          },
          "continue_on_error": true
        },
        {
          "name": "check_readme_relevance",
          "description": "Check if README needs updates based on changes",
          "type": "tool",
          "tool": "readme-analysis",
          "parameters": {
            "readme_path": "${project_path}/README.md",
            "project_path": "${project_path}",
            "validate_code_examples": true
          },
          "continue_on_error": true
        },
        {
          "name": "validate_updated_docs",
          "description": "Validate all documentation after updates",
          "type": "tool",
          "tool": "docs-validation",
          "parameters": {
            "docs_path": "${project_path}",
            "check_links": true,
            "spelling_check": true
          },
          "continue_on_error": true
        },
        {
          "name": "generate_update_summary",
          "description": "Generate summary of documentation updates",
          "type": "tool",
          "tool": "generate-docs-update-summary",
          "parameters": {
            "update_results": "${all_results}",
            "project_path": "${project_path}"
          },
          "continue_on_error": false
        },
        {
          "name": "commit_changes",
          "description": "Commit documentation changes if auto-commit is enabled",
          "type": "conditional",
          "condition": {
            "type": "equals",
            "field": "auto_commit",
            "value": true
          },
          "then": {
            "type": "tool",
            "tool": "git-commit",
            "parameters": {
              "repository_path": "${project_path}",
              "message": "docs: Update documentation based on code changes",
              "files": "${updated_doc_files}"
            }
          }
        }
      ],
      "outputs": {
        "type": "object",
        "properties": {
          "updated_files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validation_results": {
            "type": "object"
          },
          "update_summary": {
            "type": "string"
          },
          "commit_hash": {
            "type": "string"
          }
        }
      },
      "constraints": [
        {
          "type": "file_access",
          "description": "Requires read/write access to documentation files"
        },
        {
          "type": "git_access",
          "description": "Requires git access for commits"
        }
      ]
    }
  ]
}
